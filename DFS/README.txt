Project Description: This project generates a circuit (sequence of edges starting from one node and ending to itself) 
using every edge of the graph. This circuit is generated by performing a depth first search on an undirected graph
which is constructed from the provided information (nodes, edges, weight).

Files Included: 

1. Assignment7.cpp: This program takes a file "graph.txt" with the graph information needed to build an undirected graph 
                    as input. The first line in the file has the information about the number of nodes and edges. 
                    The subsequent lines have the edge information like the nodes and the weight for each edge. 
                    It constructs an undirected graph using this information and performs depth first search. 
                    It prints out the final graph generated as well as the circuit generated after DFS.

2. Graph.h: This program builds our own custom data structure by defining the methods makeEdge, printGraph, DFS, DFS_visit, 
            updateUse, constructor and destructor for the class AdjacencyList. The methods DFS, DFS_visit help in 
            performing the depth first search for a given graph using every edge. We instantiate an AdjacencyList object which is nothing
            but an array of pointers, each one referencing a linked list. We also instantiate an object of Stack class which
            has tempStack and Circuit stacks (Last in, first out).

3. LinkedList.h: This program builds our own custom data structure by defining the methods insertEdge, printList, 
                LengthOfList constructor and destructor for the class LinkedList.

4. Stack.h: This program builds our own custom data structure (LIFO Stack) using arrays by defining the methods push, 
            pop, printStack, printCircuit, constructor and destructor for the class Stack.

5. Makefile: This file compiles the Assignment7.cpp, Graph.h, LinkedList.h, Stack.h files and generates an executable 
             file called assignment7.